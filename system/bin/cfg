#!/system/bin/sh
#==============================================================
#       FILE: cfg
#       AUTHOR: ImbaWind @ XDA
#       DESCRIPTION: Shell Script Advanced Features
#       USAGE: cfg
#==============================================================
. "/system/bin/SSAF_INCL.sh"
SCRIPT_VERSION=0

REBOOT_REQUIRED=0;

ACTION=$1
if [ "$ACTION" = "version" ]; then
	echo $SCRIPT_VERSION;
	CHECK_INTERNET
	exit 0
fi

function verify_files()
{
	clear
	FILES_UPDATED=0
	MOUNT_RW
# ========================================================
# Download missing files
# ========================================================
	if [ ! -f "/system/bin/powercfg" ]; then 
		FILES_UPDATED=1
		echo "Downloading powercfg...";
		wget -O /system/bin/powercfg https://raw.githubusercontent.com/imbawind/Shell-Script-Advanced-Features/master/system/bin/powercfg
		echo "";
	fi
	if [ ! -f "/system/bin/set_key" ]; then 
		FILES_UPDATED=1
		echo "Downloading set_key...";
		wget -O /system/bin/set_key https://raw.githubusercontent.com/imbawind/Shell-Script-Advanced-Features/master/system/bin/set_key
		echo "";
	fi
	if [ ! -f "/system/bin/set_prop" ]; then 
		FILES_UPDATED=1
		echo "Downloading set_prop...";
		wget -O /system/bin/set_prop https://raw.githubusercontent.com/imbawind/Shell-Script-Advanced-Features/master/system/bin/set_prop
		echo "";
	fi
	if [ ! -f "/system/bin/SSAF_advanced_device_settings" ]; then 
		FILES_UPDATED=1
		echo "Downloading SSAF_advanced_device_settings...";
		wget -O /system/bin/SSAF_advanced_device_settings https://raw.githubusercontent.com/imbawind/Shell-Script-Advanced-Features/master/system/bin/SSAF_advanced_device_settings
		echo "";
	fi
	if [ ! -f "/system/bin/SSAF_kernel_tuner" ]; then 
		FILES_UPDATED=1
		echo "Downloading SSAF_kernel_tuner...";
		wget -O /system/bin/SSAF_kernel_tuner https://raw.githubusercontent.com/imbawind/Shell-Script-Advanced-Features/master/system/bin/SSAF_kernel_tuner
		echo "";
	fi
	if [ ! -f "/system/bin/SSAF_network_settings" ]; then 
		FILES_UPDATED=1
		echo "Downloading SSAF_network_settings...";
		wget -O /system/bin/SSAF_network_settings https://raw.githubusercontent.com/imbawind/Shell-Script-Advanced-Features/master/system/bin/SSAF_network_settings
		echo "";
	fi
	if [ ! -f "/system/xbin/dss" ]; then 
		FILES_UPDATED=1
		echo "Downloading dss...";
		wget -O /system/xbin/dss https://raw.githubusercontent.com/imbawind/Shell-Script-Advanced-Features/master/system/xbin/dss
		echo "";
	fi
	if [ ! -f "/system/xbin/dss2" ]; then 
		FILES_UPDATED=1
		echo "Downloading dss2...";
		wget -O /system/xbin/dss2 https://raw.githubusercontent.com/imbawind/Shell-Script-Advanced-Features/master/system/xbin/dss2
		echo "";
	fi
	if [ ! -f "/system/etc/init.d/LS00devicename" ]; then 
		FILES_UPDATED=1
		echo "Downloading LS00devicename...";
		wget -O /system/etc/init.d/LS00devicename https://raw.githubusercontent.com/imbawind/Shell-Script-Advanced-Features/master/system/etc/init.d/LS00devicename
		sed -i  "6 cdoresetprop ro.product.model '`getprop ro.product.model`'" /system/etc/init.d/LS00devicename
		sed -i  "7 cdoresetprop ro.product.brand '`getprop ro.product.brand`'" /system/etc/init.d/LS00devicename
		sed -i  "8 cdoresetprop ro.product.manufacturer '`getprop ro.product.manufacturer`'" /system/etc/init.d/LS00devicename
		sed -i  "9 cdoresetprop ro.product.name '`getprop ro.product.name`'" /system/etc/init.d/LS00devicename
		sed -i  "10 cdoresetprop ro.product.device '`getprop ro.product.device`'" /system/etc/init.d/LS00devicename
		echo "";
	fi
	if [ ! -f "/system/etc/init.d/LS00powercfg" ]; then 
		FILES_UPDATED=1
		echo "Downloading LS00powercfg...";
		wget -O /system/etc/init.d/LS00powercfg https://raw.githubusercontent.com/imbawind/Shell-Script-Advanced-Features/master/system/etc/init.d/LS00powercfg
		echo "";
	fi
	if [ ! -f "/system/etc/init.d/LS00resetdns" ]; then 
		FILES_UPDATED=1
		echo "Downloading LS00resetdns...";
		wget -O /system/etc/init.d/LS00resetdns https://raw.githubusercontent.com/imbawind/Shell-Script-Advanced-Features/master/system/etc/init.d/LS00resetdns
		echo "";
	fi
	if [ ! -f "/system/etc/init.d/LS00kernelconfig" ]; then 
		FILES_UPDATED=1
		echo "Downloading LS00kernelconfig...";
		wget -O /system/etc/init.d/LS00kernelconfig https://raw.githubusercontent.com/imbawind/Shell-Script-Advanced-Features/master/system/etc/init.d/LS00kernelconfig
		sed -i  "24 cecho `cat /sys/devices/system/cpu/cpu4/cpufreq/scaling_max_freq` > /sys/devices/system/cpu/cpu\$i/cpufreq/scaling_max_freq" /system/etc/init.d/LS00kernelconfig
		sed -i  "16 cecho `cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq` > /sys/devices/system/cpu/cpu\$i/cpufreq/scaling_max_freq" /system/etc/init.d/LS00kernelconfig
		echo "";
	fi
	if [ ! -f "/system/etc/hosts.long" ]; then 
		FILES_UPDATED=1
		echo "Downloading hosts.long...";
		wget -O /system/etc/hosts.long https://raw.githubusercontent.com/imbawind/Shell-Script-Advanced-Features/master/system/etc/hosts.long
		echo "";
	fi
	if [ ! -f "/system/etc/hosts.medium" ]; then 
		FILES_UPDATED=1
		echo "Downloading hosts.medium...";
		wget -O /system/etc/hosts.medium https://raw.githubusercontent.com/imbawind/Shell-Script-Advanced-Features/master/system/etc/hosts.medium
		echo "";
	fi
	if [ ! -f "/system/etc/hosts.short" ]; then 
		FILES_UPDATED=1
		echo "Downloading hosts.short...";
		wget -O /system/etc/hosts.short https://raw.githubusercontent.com/imbawind/Shell-Script-Advanced-Features/master/system/etc/hosts.short
		echo "";
	fi
	if [ ! -f "/system/usr/keylayout/Generic.kl" ]; then 
		FILES_UPDATED=1
		echo "Downloading Generic.kl...";
		wget -O /system/usr/keylayout/Generic.kl https://raw.githubusercontent.com/imbawind/Shell-Script-Advanced-Features/master/system/usr/keylayout/Generic.kl
		echo "";
	fi

	if [ "$FILES_UPDATED" -eq 1 ]; then
		if [ ! -f "/system/bin/powercfg" ]; then
			echo "E: /system/bin/powercfg"
			press_enter
			exit 0
		fi
		echo "powercfg ${GREEN}OK${NONE}";

		if [ ! -f "/system/bin/set_key" ]; then
			echo "E: /system/bin/set_key"
			press_enter
			exit 0
		fi
		echo "set_key ${GREEN}OK${NONE}";

		if [ ! -f "/system/bin/set_prop" ]; then
			echo "E: /system/bin/set_prop"
			press_enter
			exit 0
		fi
		echo "set_prop ${GREEN}OK${NONE}";

		if [ ! -f "/system/bin/SSAF_advanced_device_settings" ]; then
			echo "E: /system/bin/SSAF_advanced_device_settings"
			press_enter
			exit 0
		fi
		echo "SSAF_advanced_device_settings ${GREEN}OK${NONE}";

		if [ ! -f "/system/bin/SSAF_kernel_tuner" ]; then
			echo "E: /system/bin/SSAF_kernel_tuner"
			press_enter
			exit 0
		fi
		echo "SSAF_kernel_tuner ${GREEN}OK${NONE}";

		if [ ! -f "/system/bin/SSAF_network_settings" ]; then
			echo "E: /system/bin/SSAF_network_settings"
			press_enter
			exit 0
		fi
		echo "SSAF_network_settings ${GREEN}OK${NONE}";

		if [ ! -f "/system/xbin/dss" ]; then
			echo "E: /system/xbin/dss"
			press_enter
			exit 0
		fi
		echo "dss ${GREEN}OK${NONE}";

		if [ ! -f "/system/xbin/dss2" ]; then
			echo "E: /system/xbin/dss"
			press_enter
			exit 0
		fi
		echo "dss2 ${GREEN}OK${NONE}";

		if [ ! -f "/system/etc/init.d/LS00devicename" ]; then
			echo "E: /system/etc/init.d/LS00devicename"
			press_enter
			exit 0
		fi
		echo "LS00devicename ${GREEN}OK${NONE}";

		if [ ! -f "/system/etc/init.d/LS00powercfg" ]; then
			echo "E: /system/etc/init.d/LS00powercfg"
			press_enter
			exit 0
		fi
		echo "LS00powercfg ${GREEN}OK${NONE}";

		if [ ! -f "/system/etc/init.d/LS00resetdns" ]; then
			echo "E: /system/etc/init.d/LS00resetdns"
			press_enter
			exit 0
		fi
		echo "LS00resetdns ${GREEN}OK${NONE}";

		if [ ! -f "/system/etc/init.d/LS00kernelconfig" ]; then
			echo "E: /system/etc/init.d/LS00kernelconfig"
			press_enter
			exit 0
		fi
		echo "LS00kernelconfig ${GREEN}OK${NONE}";

		if [ ! -f "/system/etc/hosts.long" ]; then
			echo "E: /system/etc/hosts.long"
			press_enter
			exit 0
		fi
		echo "hosts.long ${GREEN}OK${NONE}";

		if [ ! -f "/system/etc/hosts.medium" ]; then
			echo "E: /system/etc/hosts.medium"
			press_enter
			exit 0
		fi
		echo "hosts.medium ${GREEN}OK${NONE}";

		if [ ! -f "/system/etc/hosts.short" ]; then
			echo "E: /system/etc/hosts.short"
			press_enter
			exit 0
		fi
		echo "hosts.short ${GREEN}OK${NONE}";

		if [ ! -f "/system/usr/keylayout/Generic.kl" ]; then
			echo "E: /system/usr/keylayout/Generic.kl"
			press_enter
			exit 0
		fi
		echo "Generic.kl ${GREEN}OK${NONE}";
		echo "";
	fi

# ========================================================
# Fix permissions & convert to UNIX
# ========================================================
	chmod 777 /system/bin/cfg
	dos2unix /system/bin/cfg
	chmod 777 /system/bin/powercfg
	dos2unix /system/bin/powercfg
	chmod 777 /system/bin/set_key
	dos2unix /system/bin/set_key
	chmod 777 /system/bin/set_prop
	dos2unix /system/bin/set_prop
	chmod 777 /system/bin/SSAF_advanced_device_settings
	dos2unix /system/bin/SSAF_advanced_device_settings
	chmod 777 /system/bin/SSAF_kernel_tuner
	dos2unix /system/bin/SSAF_kernel_tuner
	chmod 777 /system/bin/SSAF_network_settings
	dos2unix /system/bin/SSAF_network_settings
	chmod 777 /system/xbin/dss
	dos2unix /system/xbin/dss
	chmod 777 /system/xbin/dss2
	dos2unix /system/xbin/dss2
	chmod 755 /system/etc/init.d/LS00devicename
	dos2unix /system/etc/init.d/LS00devicename
	chmod 755 /system/etc/init.d/LS00powercfg
	dos2unix /system/etc/init.d/LS00powercfg
	chmod 755 /system/etc/init.d/LS00resetdns
	dos2unix /system/etc/init.d/LS00resetdns
	chmod 755 /system/etc/init.d/LS00kernelconfig
	dos2unix /system/etc/init.d/LS00kernelconfig
	chmod 644 /system/etc/hosts.long
	chmod 644 /system/etc/hosts.medium
	chmod 644 /system/etc/hosts.short
	chmod 644 /system/usr/keylayout/Generic.kl
	
	if [ "$FILES_UPDATED" -eq 1 ]; then press_enter; fi
}

function power_device()
{
	while :
	do
		clear
		echo "${GREEN}Power Menu${NONE}";
		echo "";
		echo " 1. Reboot device";
		echo " 2. Reboot into recovery";
		echo " 3. Reboot into bootloader";
		echo " 4. Power off device";
		echo " 0. Exit"
		echo ""
		echo -n "${YELLOW}Enter option : ${NONE}";
		read mode
		case $mode in
			1)	:;;
			2)	:;;
			3)	:;;
			4)	:;;
			0)	break;;
			*)	clear;
				echo "${RED}Invalid option${NONE}"
				sleep 1;;
		esac
		if [[ "$mode" -lt 5 && "$mode" -gt 0 ]] ; then
			echo -n "Are you sure? (y/n): ";
			read opt
			case $opt in
				y|Y) :;;
				*)	break;;
			esac
		fi

		case $mode in
			1)	reboot &>/dev/null;;
			2)	reboot recovery &>/dev/null;;
			3)	reboot download &>/dev/null;;
			4)	poweroff;;
		esac
	done
}

check_root
verify_files

while :
do
	clear;
	echo -e "${GREEN}${BOLD}Shell Script Advanced Features${NONE}";
	echo "Version: ${CYAN}$SCRIPT_VERSION${NONE}";
	echo "";
	echo " 1. Advanced Device Settings";
	echo " 2. Network Settings";
	echo " 3. Kernel Tuner";
	echo "99. Power Menu";
	echo " 0. Exit";
	echo "";
	echo -n "${YELLOW}Enter option : ${NONE}";
	read opt
	echo "";
	case $opt in
		1)	SSAF_advanced_device_settings;
			REBOOT_REQUIRED=$?;;
		2)	SSAF_network_settings;
			REBOOT_REQUIRED=$?;;
		3)	SSAF_kernel_tuner;
			REBOOT_REQUIRED=$?;;
		99)	power_device;;
		0)	clear;
			if [ "$REBOOT_REQUIRED" -eq 1 ]; then
				echo "You have made changes that require a reboot to apply";
				echo "";
				echo -n "Do you want to reboot now? (y/n): ";
				read opt
				case $opt in
					y|Y) reboot &>/dev/null;;
					*)	clear;;
				esac
			fi
			clear;
			break;;
		*)	clear;
			echo "${RED}Invalid option${NONE}"
			sleep 1;;
	esac
done
exit 0
